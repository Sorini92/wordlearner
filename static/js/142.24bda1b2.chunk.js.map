{"version":3,"file":"static/js/142.24bda1b2.chunk.js","mappings":"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","sources":["components/Form/Form.js","components/Login/Login.js","pages/LoginPage.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport google from \"../../resources/google.png\";\nimport PropTypes from 'prop-types';\nimport './form.scss';\n\nconst Form = ({type, title, handleClick, to, text, signInWithGoogle}) => {\n\n    const [email, setEmail] = useState('');\n    const [pass, setPass] = useState('');\n\n    return (\n        <div className=\"form\">\n\n            <div className=\"form__type\">{type}</div>\n            <input\n                className=\"form__input\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"email\"\n            />\n            <input\n                className=\"form__input\"\n                type=\"password\"\n                value={pass}\n                onChange={(e) => setPass(e.target.value)}\n                placeholder=\"password\"\n            />\n            <div className=\"form__bottom\">\n                {signInWithGoogle ? \n                <div className=\"form__google\">\n                    <div className=\"form__google-text\">\n                        Sign in with\n                    </div>\n                    <img src={google} alt=\"google logo\" onClick={signInWithGoogle}/>\n                </div> : null\n                }\n                <button\n                    className=\"form__btn\"\n                    onClick={() => handleClick(email, pass)}\n                >\n                    {title}\n                </button>\n            </div>\n            <p className=\"form__p\">\n                {text} <Link className=\"form__link\" to={`/${to}`}>{to}</Link>\n            </p>\n        </div>\n    )\n}\n\nForm.propTypes = {\n    type:  PropTypes.string.isRequired,\n    title:  PropTypes.string.isRequired,\n    handleClick:  PropTypes.func.isRequired,\n    to:  PropTypes.string.isRequired, \n    text:  PropTypes.string.isRequired, \n}\n\nexport default Form;","import Form from '../Form/Form';\nimport { useDispatch } from 'react-redux';\nimport { getAuth, signInWithEmailAndPassword, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { useNavigate } from 'react-router-dom';\nimport {setUser} from '../../store/slices/userSlice';\n\nconst Login = () => {\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const auth = getAuth(); \n\n    const handleLogin = (email, password) => {\n\n        signInWithEmailAndPassword(auth, email, password)\n            .then(({user}) => {\n                dispatch(setUser({\n                    email: user.email,\n                    id: user.uid,\n                    token: user.accessToken,\n                }))\n                \n                navigate('/')\n            })\n            .catch(() => alert('Invalid user'))\n\n    }\n\n    const signInWithGoogle = () => {\n\n        const provider = new GoogleAuthProvider();\n\n        const isMobile = window.matchMedia(\"only screen and (max-width: 760px)\").matches;\n          \n        if (!isMobile) {\n            signInWithPopup(auth, provider)\n                .then((result) => {      \n                        \n                    const user = result.user;\n\n                    dispatch(setUser({\n                        email: user.email,\n                        id: user.uid,\n                        token: user.accessToken,\n                    }))\n                    \n                    navigate('/')\n                })\n                .catch(() => alert('Invalid user'));\n        } else {\n            signInWithRedirect(auth, provider)\n        }\n    }\n    \n    return (\n        <div className='firstpage'>\n            <Form \n                text='or' \n                to='register' \n                type='Login'  \n                title='sign in' \n                handleClick={handleLogin}\n                signInWithGoogle={signInWithGoogle}\n            />\n        </div>\n    )\n}\n\nexport default Login;","import { Helmet } from \"react-helmet\";\nimport Login from \"../components/Login/Login\";\n\nconst LoginPage = () => {\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"login page\"\n                />\n                <title>Login</title>\n            </Helmet>\n            <Login/>\n        </>\n    )\n}\n\nexport default LoginPage;"],"names":["_ref","type","title","handleClick","to","text","signInWithGoogle","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","pass","setPass","_jsxs","className","children","_jsx","value","onChange","e","target","placeholder","src","google","alt","onClick","Link","concat","dispatch","useDispatch","navigate","useNavigate","auth","getAuth","Form","password","signInWithEmailAndPassword","then","user","setUser","id","uid","token","accessToken","catch","alert","provider","GoogleAuthProvider","window","matchMedia","matches","signInWithRedirect","signInWithPopup","result","_Fragment","Helmet","name","content","Login"],"sourceRoot":""}